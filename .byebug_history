c
params
c
User.where(id: 1)
User.pluck(:id).sort
User.pluck(:id).order
User.pluck(:id).order()
User.pluck(:id)
User.all
User.id
User.pluck(:id)
User.all
User.where.not("id IN ?", project_memberships)
User.where.not("in IN ?", project_memberships)
project_memberships
ProjectMembership.where(project_id: 3).count
ProjectMembership.where(project_id: 3)
ProjectMembership.all
ProjectMembership.find_by_project_id(3)
Project.find(3).members.pluck(:id)
Project.find(3).members.pluck(id)
params
c
Project.find(4).members
ProjectMembership.where(project_id: 4)[0].members
ProjectMembership.where(project_id: 4).members
ProjectMembership.where(project_id: 4)
params
ProjectMembership.where(project_id: params[:project_id])
project_memberships
c
"(#{project_memberships.join(",")})"
"(#{project_memberships.join(","})"
"(#{project_memberships})"
project_memberships
n
c
users
n
project_memberships
n
c
users
n
c
users
n
c
n
c
n
s
c
@users
c
s
n
@users
n
users
n
users
n
params
c
users =User.where("name LIKE :query", query: "%#{params[:name]}")
users = users.where("name LIKE :query", query: "%#{params[:name]}")
params[:name]
JSON.parse(params)
params
quit
clear
User.where("name LIKE :query", query: "%a%").where("organization LIKE :query", query: "%a%").limit(1)
User.where("name LIKE :query", query: "%a%").where("organization LIKE :query", query: "%a%")
User.where("name LIKE :query", query: "%a%")
User.where("name LIKE :query", query: "a")
users
JSON.parse(params)
JSON.parse(params
params
c
exit
exception
n
wtf!
wtf
n
@project
n
@pm
@project = Project.find_by_id(params[:project_membership][:project_id])
@pm
